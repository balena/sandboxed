# @file CMakeLists.txt
# @author Samuel Macedo <samuel@comunip.com.br>
# @date 01/03/2009 16:47:33

# Copyright (c) 2010 ComunIP S/A. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
MARK_AS_ADVANCED(FORCE CMAKE_BACKWARDS_COMPATIBILITY)

PROJECT(sandboxed)

IF(NOT CMAKE_BUILD_TYPE)
  SET(CMAKE_BUILD_TYPE "Debug")
ENDIF(NOT CMAKE_BUILD_TYPE)

# Set CMake modules path
SET(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake/modules")

# Setup msvc
IF(MSVC)

  IF(MSVC60 OR MSVC70 OR MSVC71)

    SET(CMAKE_C_FLAGS "/W3")
    SET(CMAKE_C_FLAGS_DEBUG "/MDd /Zi /Gm /GX /Od /GZ")
    SET(CMAKE_C_FLAGS_RELEASE "/MD /GX /O2")
    SET(CMAKE_C_FLAGS_MINSIZEREL "/MD /GX /O1")
    SET(CMAKE_C_FLAGS_RELWITHDEBINFO "/MD /Zi /GX /O2")

    SET(CMAKE_CXX_FLAGS "/W3")
    SET(CMAKE_CXX_FLAGS_DEBUG "/MDd /Zi /Gm /GX /Od /GZ")
    SET(CMAKE_CXX_FLAGS_RELEASE "/MD /GX /O2")
    SET(CMAKE_CXX_FLAGS_MINSIZEREL "/MD /GX /O1")
    SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO "/MD /Zi /GX /O2")

  ELSE(MSVC60 OR MSVC70 OR MSVC71)

    SET(CMAKE_C_FLAGS "/W3")
    SET(CMAKE_C_FLAGS_DEBUG "/MDd /Zi /Gm /EHsc /Od /RTC1")
    SET(CMAKE_C_FLAGS_RELEASE "/MD /EHsc /O2")
    SET(CMAKE_C_FLAGS_MINSIZEREL "/MD /EHsc /O1")
    SET(CMAKE_C_FLAGS_RELWITHDEBINFO "/MD /Zi /EHsc /O2")

    SET(CMAKE_CXX_FLAGS "/W3")
    SET(CMAKE_CXX_FLAGS_DEBUG "/MDd /Zi /Gm /EHsc /Od /RTC1")
    SET(CMAKE_CXX_FLAGS_RELEASE "/MD /EHsc /O2")
    SET(CMAKE_CXX_FLAGS_MINSIZEREL "/MD /EHsc /O1")
    SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO "/MD /Zi /EHsc /O2")

  ENDIF(MSVC60 OR MSVC70 OR MSVC71)

  SET(CMAKE_EXE_LINKER_FLAGS "/machine:I386")
  SET(CMAKE_SHARED_LINKER_FLAGS "/dll /machine:I386")
  SET(CMAKE_MODULE_LINKER_FLAGS "/dll /machine:I386")

ENDIF(MSVC)

IF(WIN32)
  ADD_DEFINITIONS(-D_CRT_SECURE_NO_WARNINGS=1 -DUNICODE -D_UNICODE -DOS_WIN=1)
  ADD_DEFINITIONS(-D_CRT_RAND_S -DCERT_CHAIN_PARA_HAS_EXTRA_FIELDS)
  ADD_DEFINITIONS(-DWIN32_LEAN_AND_MEAN -D_SECURE_ATL -D_HAS_TR1=0)
  ADD_DEFINITIONS(-D__STDC_FORMAT_MACROS -DCHROMIUM_BUILD)
  ADD_DEFINITIONS(-DU_STATIC_IMPLEMENTATION -DNOMINMAX)
ENDIF(WIN32)

# Simplifies build-and-test a lot...
SET(EXECUTABLE_OUTPUT_PATH "${CMAKE_BINARY_DIR}/bin" CACHE PATH "Executables output path")
SET(LIBRARY_OUTPUT_PATH "${CMAKE_BINARY_DIR}/bin" CACHE PATH "Libraries output path")
MARK_AS_ADVANCED(FORCE EXECUTABLE_OUTPUT_PATH LIBRARY_OUTPUT_PATH)

# List the subdirectories
ADD_SUBDIRECTORY(chrome)
ADD_SUBDIRECTORY(sandboxed)
ADD_SUBDIRECTORY(test)

# Modeline for vim: set tw=79 et ts=4:
